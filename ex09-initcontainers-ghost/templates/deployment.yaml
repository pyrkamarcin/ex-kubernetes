apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-ghost
spec:
  replicas: {{ .Values.replicas }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      name: ghost
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        name: ghost
        release: {{ .Release.Name }}
    spec:
      initContainers:
        - name: init-mydb
          image: mysql:5.7.29
          command:
            [
              "sh",
              "-c",
              'until mysql -h {{ .Release.Name }}-mysql-service -uroot -prootpassword -e "SELECT 1"; do echo waiting for mysql-service; sleep 2; done;',
            ]
      containers:
        - name: ghost
          image: docker.io/ghost:3.38.1
          resources:
            limits:
              memory: 256Mi
              cpu: 500m
            requests:
              memory: 256Mi
              cpu: 250m
          ports:
            - containerPort: 2368
          env:
            - name: database__client
              value: mysql
            - name: database__connection__host
              valueFrom:
                configMapKeyRef:
                  name: {{ .Release.Name }}-configmap
                  key: database_host
            - name: database__connection__user
              valueFrom:
                configMapKeyRef:
                  name: {{ .Release.Name }}-configmap
                  key: database_user
            - name: database__connection__password
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-secret
                  key: database_password
            - name: database__connection__database
              valueFrom:
                configMapKeyRef:
                  name: {{ .Release.Name }}-configmap
                  key: database_name
            - name: url
              value: http://{{ .Release.Name }}.127.0.0.1.nip.io
          volumeMounts:
            - name: ghost-claim-internal
              mountPath: /var/lib/ghost/content
          livenessProbe:
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 1
            failureThreshold: 1
            successThreshold: 1
            httpGet:
              path: /
              port: 2368
              scheme: HTTP
          readinessProbe:
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 6
            successThreshold: 1
            httpGet:
              path: /
              port: 2368
              scheme: HTTP
      volumes:
        - name: ghost-claim-internal
          persistentVolumeClaim:
            claimName: {{ .Release.Name }}-ghost-claim
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ .Release.Name }}-ghost-claim
  labels:
    name: ghost
    release: {{ .Release.Name }}
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 1Gi
